pool:
  vmImage: 'Ubuntu 16.04'

variables:
  dockerRegistry: 'AnotherICe - Docker - Registry'
  dockerRepostiory: anotherice/rusetfs-blogifier
  dockerComposeArtifact: dockerCompose
  dockerComposeFile: docker-compose.yml

stages:
- stage: build
  jobs:
  - job: dockerImage
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - task: Docker@2
      inputs:
        command: login
        containerRegistry: $(dockerRegistry)
    - task: Docker@2 
      inputs:
        command: buildAndPush
        containerRegistry: $(dockerRegistry)
        repository: $(dockerRepostiory)
        arguments: '--target run'
        dockerfile: dockerfile
  - job: dockerComposeConfiguration
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - publish: $(Build.SourcesDirectory)/deploy/$(dockerComposeFile)
      artifact: $(dockerComposeArtifact)
- stage: staging
  jobs:
  - deployment: deployOnCompose
    environment:
      name: Staging
      resourceType: VirtualMachine
    strategy:
     runOnce:
       deploy:
         steps:
         - task: Docker@2
           inputs:
             command: login
             containerRegistry: $(dockerRegistry)
         - task: DownloadPipelineArtifact@2
           inputs:
             artifactName: $(dockerComposeArtifact)
             targetPath: $(Build.SourcesDirectory)
         - task: DockerCompose@0
           inputs:
             action: Run services
             containerregistrytype: Container Registry
             dockerRegistryEndpoint: $(dockerRegistry)
             dockerComposeFile: $(Build.SourcesDirectory)/$(dockerComposeFile)
             buildImages: false
             dockerComposeFileArgs: |
               RUSETFS_BLOGIFIER_DATA_DIR: d:\data\blogifier


